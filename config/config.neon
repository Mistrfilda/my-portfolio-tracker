di:
	lazy: false

latte:
	strictTypes: true
	#strictParsing: true

parameters:
	console:
		url: https://localhost/my-portfolio-tracker/

	basePresenterParameters:
		pageTitle: 'My portfolio app'
		storageName: 'my-portfolio-app'

	twelveData:
		apiKey: __FILL_API_KEY__
		updateStockAssetHoursThreshold: 2

	pse:
		updateStockAssetHoursThreshold: 1
		verifySsl: true
		requests:
			-
				url: https://example.com
				pricePositionTag: 1
				tableTdsCount: 1

	stockDividend:
		webStockAssetDividendDownloaderUrl: https://example.com

	webStockPriceDownloader:
		url: https://example.com
		updateStockAssetHoursThreshold: 1
		verifySsl: true
		requestHost: https://example.com
		cookie: aaaa

	stockValuation:
		financialsDataUrl: https://example.com
		keyStatisticsDataUrl: https://example.com

	workMonthlyIncome:
		harvestAccountId: 50
		harvestUserId: 50
		harvestAccessToken: 50
		currentHourlyRate: 50

	portfolioStatistic:
		startYear: 2023

	puppeter:
		folder: %appDir%/../puppeter/files

	systemValue:
		databag:
			versionFile: %appDir%/../deploy-versions.txt

	notifications:
		discord:
			webhooks:
				new_dividend: null
				trend_alert_default: null
				trend_alert_1_days: null
				trend_alert_7_days: null
				trend_alert_30_days: null
				default: null

	monitoring:
		monitoringUptimeMonitorMapping:
			updated_stock_dividends_count: null
			updated_stock_prices_count: null
			updated_stock_valuation_count: null

application:
	errorPresenter: Error:Error
	mapping:
		*: ['App', '*', '*\UI\*Presenter']
		Error: App\UI\Error\*Presenter

session:
	autoStart: true
	expiration: 14 days

tracy:
	maxDepth: 6
	showLocation: true
	dumpTheme: dark
	editor: 'phpstorm://open?file=%file&line=%line'
	bar:
		- Contributte\RabbitMQ\Diagnostics\BarPanel

extensions:
	console: Contributte\Console\DI\ConsoleExtension(%consoleMode%)
	dbal: Nettrine\DBAL\DI\DbalExtension
	orm: Nettrine\ORM\DI\OrmExtension
	orm.cache: Nettrine\Cache\DI\CacheExtension
	migrations: Nettrine\Migrations\DI\MigrationsExtension
	monolog: Contributte\Monolog\DI\MonologExtension
	rabbitmq: Contributte\RabbitMQ\DI\RabbitMQExtension

	webpackassets: App\UI\Extension\Webpack\DI\WebpackAssetExtension
	custompresenterfactory: App\UI\Extension\PresenterFactory\DI\CustomPresenterFactoryExtension
	latteMacros: App\UI\Extension\Latte\LatteMacrosExtension

dbal:
	debug:
		panel: %debugMode%
	connections:
		default:
			host: %database.host%
			port: %database.port%
			user: %database.user%
			password: %database.password%
			dbname: %database.dbname%
			driver: 'pdo_mysql'

	types:
		uuid: Ramsey\Uuid\Doctrine\UuidType
		datetime_immutable: Mistrfilda\Datetime\Doctrine\DatetimeImmutableType
		date_immutable: Mistrfilda\Datetime\Doctrine\DateImmutableType

orm:
	managers:
		default:
			connection: default
			mapping:
				App:
					directories: [%appDir%]
					namespace: App
			defaultCache: Contributte\Psr6\CachePool(
				Nette\Caching\Cache(namespace: "doctrine/orm")
			)
			customStringFunctions:
				group_concat: DoctrineExtensions\Query\Mysql\GroupConcat
				timestampdiff: DoctrineExtensions\Query\Mysql\TimestampDiff
				day: DoctrineExtensions\Query\Mysql\Day
				month: DoctrineExtensions\Query\Mysql\Month
				year: DoctrineExtensions\Query\Mysql\Year
				hour: DoctrineExtensions\Query\Mysql\Hour
				date: DoctrineExtensions\Query\Mysql\Date

migrations:
	table: doctrine_migrations
	column: version
	directories:
		Migrations: %appDir%/../migrations

monolog:
	channel:
		default:
			handlers:
				- Monolog\Handler\RotatingFileHandler(%appDir%/../log/app-log.log, 30)
				- Monolog\Handler\StreamHandler("php://stdout")
			processors:
				- Monolog\Processor\MemoryPeakUsageProcessor()
				- Monolog\Processor\WebProcessor()
				- Monolog\Processor\IntrospectionProcessor()

console:
    url: %console.url%
    catchExceptions: false

webpackassets:
	assetsDirs:
		- %wwwDir%/build/admin

latteMacros:
	svgDir: %appDir%/../assets/svg

services:
	- App\Router\RouterFactory::createRouter

	latte.latteFactory:
		setup:
			- setStrictTypes(true)
			- addFilter(datetimeFormat, [@datetimeFormatFilter, format])
			- addFilter(secondsFormat, [@secondsFormatFilter, format])
			- addFilter(nullablestring, [@nullableStringFilter, format])
			- addFilter(flashMessageColor, [@flashMessageColorFilter, format])
			- addFilter(assetPriceFormat, [@assetPriceFormatFilter, format])
			- addFilter(currency, [@currencyFilter, format])
			- addFilter(summaryPriceFormat, [@summaryPriceFilter, format])
			- addFilter(percentage, [@percentageFilter, format])
			- addFilter(ruleOfThree, [@ruleOfThreeFilter, getPercentage])
			- addFilter(currencyConvert, [@currencyConversionFilter, convert])
			- addFilter(expensePriceFormat, [@expensePriceFilter, format])
			- addFilter(nullableCurrencyConvert, [@currencyNullableConversionFilter, convert])
			- addFilter(summaryPriceConvert, [@summaryPriceConvertFilter, convert])
			- addFilter(compactCurrency, [@compactCurrencyFilter, format])

	#CUSTOM LATTE FILTERS
	datetimeFormatFilter: App\UI\Filter\DatetimeFormatFilter
	secondsFormatFilter: App\UI\Filter\SecondsFormatFilter
	nullableStringFilter: App\UI\Filter\NullableStringFilter
	flashMessageColorFilter: App\UI\Filter\FlashMessageColorFilter
	assetPriceFormatFilter: App\UI\Filter\AssetPriceFilter
	currencyFilter: App\UI\Filter\CurrencyFilter
	summaryPriceFilter: App\UI\Filter\SummaryPriceFilter
	percentageFilter: App\UI\Filter\PercentageFilter
	ruleOfThreeFilter: App\UI\Filter\RuleOfThreeFilter
	currencyConversionFilter: App\UI\Filter\CurrencyConversionFilter
	expensePriceFilter: App\UI\Filter\CashPriceFilter
	currencyNullableConversionFilter: App\UI\Filter\CurrencyNullableConversionFilter
	summaryPriceConvertFilter: App\UI\Filter\SummaryPriceConvertFilter
	compactCurrencyFilter: App\UI\Filter\CompactCurrencyFilter

	#BASE PRESENTER PARAMETERS
	- App\UI\Base\BasePresenterParameters(pageTitle: %basePresenterParameters.pageTitle%, storageName: %basePresenterParameters.storageName%)

	#FORM
	- App\UI\Control\Form\AdminFormFactory
	- App\UI\Control\Form\AdminFormRenderer

	#DATETIME FACTORY
	- Mistrfilda\Datetime\DatetimeFactory
	- Mistrfilda\Datetime\Holiday\CzechHolidayService

	#DATAGRID
	- App\UI\Control\Datagrid\DatagridFactory

	- App\UI\Menu\MenuBuilder

	#AppAdmin
	- App\Admin\AppAdminRepository(App\Admin\AppAdmin)
	- App\Admin\AppAdminAuthenticator
	- App\Admin\AppAdminFacade
	- App\Admin\CurrentAppAdminGetter
	- App\Admin\Command\CreateAppAdminCommand
	- App\Admin\UI\AppAdminGridFactory
	- App\Admin\UI\AppAdminFormFactory
	- App\Admin\UI\AppAdminChangePasswordFormFactory

	- App\UI\Control\Modal\FrontModalControlFactory

	#Login
	- App\Login\UI\Form\LoginFormFactory

	#Dashboard
	- App\Dashboard\DashboardValueBuilderFacade
	- App\Dashboard\UI\DashboardValueControl\DashboardValueControlFactory
	- App\Dashboard\DashboardDividendvalueBuilderFacade

	#HTTP
	- App\Http\Psr7\Psr7RequestFactory
	- App\Http\Psr18\Psr18ClientFactory

	#Currency
	- App\Currency\CurrencyConversionRepository(App\Currency\CurrencyConversion)
	- App\Currency\Download\CNBCurrencyConversionDownloadFacade
	- App\Currency\Download\ECBCurrencyConversionDownloadFacade
	- App\Currency\Download\Command\CurrencyConversionDownloadCommand(typed(App\Currency\Download\CurrencyConversionDownloadFacade))
	- App\Currency\Download\CurrencyConversionDownloadInverseRateHelper
	- App\Currency\CurrencyConversionFacade

	#Asset price
	- App\Asset\Price\AssetPriceRenderer
	- App\Asset\Price\SummaryPriceService
	- App\Asset\Price\AssetPriceService
	- App\Asset\Price\AssetPriceSummaryFacade(typed(App\Asset\Price\AssetPriceFacade))
	- App\Asset\Trend\AssetTrendFacade(typed(App\Asset\AssetRepository))
	- App\Asset\Trend\AssetTrendCommand

	#Stock asset
	- App\Stock\Asset\StockAssetRepository(App\Stock\Asset\StockAsset)
	- App\Stock\Asset\UI\StockAssetGridFactory
	- App\Stock\Asset\UI\StockAssetFormFactory
	- App\Stock\Asset\StockAssetFacade
	- App\Stock\Price\StockAssetPriceRecordRepository(App\Stock\Price\StockAssetPriceRecord)
	- App\Stock\Price\Downloader\TwelveData\TwelveDataDownloaderFacade(apiKey: %twelveData.apiKey%, updateStockAssetHoursThreshold: %twelveData.updateStockAssetHoursThreshold%)
	- App\Stock\Price\Downloader\TwelveData\TwelveDataDownloaderCommand
	- App\Stock\Price\Downloader\Pse\PseDataDownloaderFacade(updateStockAssetHoursThreshold: %pse.updateStockAssetHoursThreshold%, verifySsl: %pse.verifySsl%, requests: %pse.requests%)
	- App\Stock\Price\Downloader\Pse\PseDataDownloaderCommand
	- App\Stock\Asset\UI\Detail\Control\StockAssetDetailControlFactory
	- App\Stock\Asset\UI\Detail\Control\StockAssetDetailPriceChartProvider
	- App\Stock\Asset\Industry\StockAssetIndustryFacade
	- App\Stock\Asset\Industry\StockAssetIndustryRepository(App\Stock\Asset\Industry\StockAssetIndustry)
	- App\Stock\Asset\Industry\UI\StockAssetIndustryGridFactory
	- App\Stock\Asset\Industry\UI\StockAssetIndustryFormFactory

	#Stock position
	- App\Stock\Position\StockPositionRepository(App\Stock\Position\StockPosition)
	- App\Stock\Position\UI\StockPositionGridFactory
	- App\Stock\Position\StockPositionFacade
	- App\Stock\Position\UI\StockPositionFormFactory
	- App\Stock\Asset\UI\Detail\List\StockAssetListDetailControlFactory
	- App\Stock\Asset\UI\Detail\List\StockAssetListSummaryDetailControlFactory

	#Portu asset
	- App\Portu\Asset\PortuAssetRepository(App\Portu\Asset\PortuAsset)
	- App\Portu\Asset\PortuAssetFacade
	- App\Portu\Asset\UI\PortuAssetFormFactory
	- App\Portu\Asset\UI\PortuAssetGridFactory

	#Portu position
	- App\Portu\Position\PortuPositionRepository(App\Portu\Position\PortuPosition)
	- App\Portu\Position\UI\PortuPositionGridFactory
	- App\Portu\Position\UI\PortuPositionFormFactory
	- App\Portu\Position\PortuPositionFacade
	- App\Portu\Position\UI\PortuPositionPriceGridFactory
	- App\Portu\Position\UI\PortuPositionPriceFormFactory
	- App\Portu\Price\PortuAssetPriceRecordRepository(App\Portu\Price\PortuAssetPriceRecord)

	#Portfolio statistics
	- App\Statistic\PortfolioStatisticFacade
	- App\Statistic\PortfolioStatisticRepository(App\Statistic\PortfolioStatistic)
	- App\Statistic\PortfolioStatisticRecordRepository(App\Statistic\PortfolioStatisticRecord)
	- App\Statistic\PortfolioStatisticSaveCommand
	- App\Statistic\UI\Record\PortfolioStatisticRecordGridFactory

	- App\Statistic\Total\UI\Control\PortfolioStatisticTotalControlFactory
	- App\Statistic\Total\PortfolioTotalStatisticControlFacade(startYear: %portfolioStatistic.startYear%)

	#Stock dividends
	- App\Stock\Dividend\StockAssetDividendFacade
	- App\Stock\Dividend\UI\StockAssetDividendFormFactory
	- App\Stock\Dividend\UI\StockAssetDividendGridFactory
	- App\Stock\Dividend\StockAssetDividendRepository(App\Stock\Dividend\StockAssetDividend)

	-
		class: App\Stock\Dividend\Downloader\WebStockAssetDividendDownloaderFacade
		arguments:
			url: %stockDividend.webStockAssetDividendDownloaderUrl%
			requestHost: %webStockPriceDownloader.requestHost%
			cookie: %webStockPriceDownloader.cookie%

	- App\Stock\Dividend\Downloader\WebStockAssetDividendDownloaderCommand()
	- App\Stock\Dividend\Record\StockAssetDividendRecordRepository(App\Stock\Dividend\Record\StockAssetDividendRecord)
	- App\Stock\Dividend\Record\StockAssetDividendRecordService
	- App\Stock\Dividend\Record\StockAssetDividendRecordFacade
	- App\Stock\Dividend\Record\StockAssetDividendRecordCommand
	- App\Stock\Dividend\Record\UI\StockAssetDividendRecordGridFactory
	- App\Stock\Dividend\UI\Detail\StockDividendDetailControlFactory
	- App\Stock\Dividend\UI\StockAssetDividendDetailService

	- App\Stock\Price\Downloader\Web\WebDataDownloaderFacade(url: %webStockPriceDownloader.url%, requestHost: %webStockPriceDownloader.requestHost%, verifySsl: %webStockPriceDownloader.verifySsl%, updateStockAssetHoursThreshold: %webStockPriceDownloader.updateStockAssetHoursThreshold%, cookie: %webStockPriceDownloader.cookie%)
	- App\Stock\Price\Downloader\Web\WebDataDownloaderCommand

	- App\Stock\Position\Closed\StockClosedPositionFacade
	- App\Stock\Position\Closed\StockClosedPositionRepository(App\Stock\Position\Closed\StockClosedPosition)
	- App\Stock\Position\Closed\StockClosedPositionFormFactory
	- App\Stock\Position\Closed\UI\StockAssetClosedPositionListControlFactory

	- App\UI\Control\Chart\ChartControlFactory
	- App\Statistic\UI\Chart\StockDividendByMonthChartDataProvider
	- App\Statistic\UI\Chart\StockDividendByYearChartDataProvider
	- App\Statistic\UI\Chart\PortfolioTotalValueChartProvider
	- App\Statistic\UI\Chart\PortfolioTotalValueLastMonthChartProvider
	- App\Statistic\UI\Chart\StockDividendByCompanyAndMonthChartDataProvider
	- App\Statistic\UI\Chart\StockDividendByCompanyChartDataProvider
	- App\Statistic\UI\Chart\TotalInvestedAmountPieChartDataProvider

	- App\Cash\Expense\Bank\BankExpenseRepository(App\Cash\Expense\Bank\BankExpense)
	- App\Cash\Expense\UI\BankExpenseUploadFormFactory
	- App\Cash\Expense\UI\BankExpenseFormFactory
	- App\Cash\Expense\UI\BankExpenseGridFactory
	- App\Cash\Expense\Bank\BankExpenseFormFacade


	- App\Cash\Bank\Kb\KbPdfCashParser
	- App\Cash\Bank\Kb\KbCsvCashParser
	- App\Cash\Bank\Kb\KbContentParser
	- App\Cash\Bank\Kb\KbCashFacade

	- App\Cash\Expense\Tag\ExpenseTagRepository(App\Cash\Expense\Tag\ExpenseTag)
	- App\Cash\Expense\Tag\ExpenseTagFacade
	- App\Cash\Expense\Category\ExpenseCategoryRepository(App\Cash\Expense\Category\ExpenseCategory)
	- App\Cash\Expense\Tag\UI\ExpenseTagFormFactory
	- App\Cash\Expense\Tag\UI\ExpenseTagDatagridFactory
	- App\Cash\Expense\Tag\Command\ExpenseTagProcessCommand
	- App\Cash\Expense\UI\Control\ExpanseOverviewCategoryControlFactory
	- App\Cash\Expense\UI\Control\ExpenseOverviewCategoryChartDataProvider

	#WORK MONTHLY INCOME
	-
		class: App\Cash\Income\WorkMonthlyIncome\HarvestTimeDownloader
		arguments:
			harvestAccountId: %workMonthlyIncome.harvestAccountId%
			harvestUserId: %workMonthlyIncome.harvestUserId%
			harvestAccessToken: %workMonthlyIncome.harvestAccessToken%

	- App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncomeRepository(App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncome)
	- App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncomeFacade(currentHourlyRate: %workMonthlyIncome.currentHourlyRate%)
	- App\Cash\Income\WorkMonthlyIncome\DownloadWorkMonthlyIncomeCommand

	- App\Cash\Income\Bank\BankIncomeRepository(App\Cash\Income\Bank\BankIncome)
	- App\Cash\Income\Bank\UI\BankIncomeGridFactory

	#Bank Accounts
	- App\Cash\Bank\Account\BankAccountFacade
	- App\Cash\Bank\Account\BankAccountRepository(App\Cash\Bank\Account\BankAccount)
	- App\Cash\Bank\Account\UI\BankAccountFormFactory
	- App\Cash\Bank\Account\UI\BankAccountGridFactory

	-
		class: App\Stock\Price\Downloader\Json\JsonWebDataService
		arguments:
			stockAssetPriceUrl: %webStockPriceDownloader.url%
			stockAssetDividendPriceUrl: %stockDividend.webStockAssetDividendDownloaderUrl%
			financialsDataUrl: %stockValuation.financialsDataUrl%
			keyStatisticsDataUrl: %stockValuation.keyStatisticsDataUrl%

	-
		class: App\Stock\Price\Downloader\Json\JsonDataSourceProviderFacade
		arguments:
			updateStockAssetHoursThreshold: %webStockPriceDownloader.updateStockAssetHoursThreshold%

	- App\Stock\Price\Downloader\Json\Command\JsonDataSourceProviderCommand
	- App\Stock\Price\Downloader\Json\Command\JsonDataDownloaderCommand

	-
		class: App\Stock\Price\Downloader\Json\JsonDataFolderService
		arguments:
			folder: %puppeter.folder%

	- App\Stock\Price\Downloader\Json\JsonDataDownloaderFacade
	- App\Stock\Dividend\Downloader\Json\StockAssetJsonDividendDownloader
	- App\Stock\Dividend\Downloader\Json\StockAssetJsonDividendDownloaderCommand

	#System values
	- App\System\SystemValuesDataBag(%systemValue.databag%)
	- App\System\SystemValueFacade
	- App\System\SystemValueRepository(App\System\SystemValue)
	- App\System\SystemValueResolveFacade
	- App\System\UI\SystemValueControlFactory

	#Resolvers
	- App\System\Resolver\SystemValueCurrentVersionResolver
	- App\System\Resolver\SystemValueDatabaseResolver
	- App\System\Resolver\SystemValueEnabledStockAssetsResolver
	- App\System\Resolver\SystemValueLastUpdatedPricesCountResolver
	- App\System\Resolver\SystemValueEnabledDividendStockAssetsResolver
	- App\System\Resolver\SystemValueEnabledStockValuationsAssetsResolver

	#Notifications
	- App\Notification\NotificationFacade
	- App\Notification\NotificationSenderFacade(typed(App\Notification\NotificationChannelSenderFacade))
	- App\Notification\NotificationRepository(App\Notification\Notification)
	- App\Notification\Discord\NotificationDiscordSenderFacade
	- App\Notification\Discord\DiscordMessageService
	- App\Notification\Discord\DiscordChannelService(discordWebhooksMapping: %notifications.discord.webhooks%)

	#Goals
	- App\Goal\PortfolioGoalFacade
	- App\Goal\UI\PortfolioGoalFormFactory
	- App\Goal\UI\PortfolioGoalGridFactory
	- App\Goal\PortfolioGoalRepository(App\Goal\PortfolioGoal)
	- App\Goal\PortfolioGoalUpdateFacade(typed(App\Goal\Resolver\PortfolioGoalResolver))
	- App\Goal\Resolver\PortfolioGoalTotalIncomeResolver
	- App\Goal\Resolver\PortfolioGoalTotalInvestedAmountResolver
	- App\Goal\PortfolioGoalUpdateCommand
	- App\Goal\UI\Control\PortfolioGoalControlFactory
	- App\Goal\Resolver\PortfolioGoalTotalDividendAmountResolver
	- App\Goal\Resolver\PortfolioGoalMonthlyIncomeResolver

	#Stock valuation
	- App\Stock\Valuation\Command\ValuationJsonDataSourceProviderCommand
	- App\Stock\Valuation\Data\StockValuationDataFacade
	- App\Stock\Valuation\StockValuationFacade(typed(App\Stock\Valuation\Model\StockValuationModel))
	- App\Stock\Valuation\Data\StockValuationDataRepository(App\Stock\Valuation\Data\StockValuationData)
	- App\Stock\Valuation\Data\StockValuationDataParseCommand
	- App\Stock\Valuation\UI\StockValuationSortService
	- App\Stock\Valuation\UI\Control\Detail\StockValuationDetailControlFactory

	#Stock valuation models
	- App\Stock\Valuation\Model\Price\BookValueValuationModel
	- App\Stock\Valuation\Model\Price\DividendDiscountValuationModel
	- App\Stock\Valuation\Model\Price\PriceEarningsValuationModel
	- App\Stock\Valuation\Model\Price\FreeCashFlowValuationModel

	#Monitoring
	- App\Monitoring\MonitoringFacade(%monitoring.monitoringUptimeMonitorMapping%)
	- App\Monitoring\MonitoringPushMonitorsCommand
