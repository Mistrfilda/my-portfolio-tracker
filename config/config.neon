parameters:
	basePresenterParameters:
		pageTitle: 'My portfolio app'
		storageName: 'my-portfolio-app'

	twelveData:
		apiKey: __FILL_API_KEY__
		updateStockAssetHoursThreshold: 2

	pse:
		updateStockAssetHoursThreshold: 1
		verifySsl: true
		requests:
			-
				url: https://google.com
				pricePositionTag: 1
				tableTdsCount: 1

	stockDividend:
		webStockAssetDividendDownloaderUrl: https://google.com

	webStockPriceDownloader:
		url: https://google.com
		updateStockAssetHoursThreshold: 1
		verifySsl: true
		requestHost: https://google.com

	workMonthlyIncome:
		harvestAccountId: 50
		harvestUserId: 50
		harvestAccessToken: 50
		currentHourlyRate: 50

application:
	errorPresenter: Error:Error
	mapping:
		*: ['App', '*', '*\UI\*Presenter']
		Error: App\UI\Error\*Presenter

session:
	autoStart: true
	expiration: 14 days

tracy:
	maxDepth: 6
	showLocation: true
	dumpTheme: dark
	editor: 'phpstorm://open?file=%file&line=%line'

extensions:
	console: Contributte\Console\DI\ConsoleExtension(%consoleMode%)
	dbal: Nettrine\DBAL\DI\DbalExtension
	dbal.console: Nettrine\DBAL\DI\DbalConsoleExtension
	orm: Nettrine\ORM\DI\OrmExtension
	orm.console: Nettrine\ORM\DI\OrmConsoleExtension
	orm.cache: Nettrine\Cache\DI\CacheExtension
	migrations: Nettrine\Migrations\DI\MigrationsExtension
	orm.attributes: Nettrine\ORM\DI\OrmAttributesExtension
	monolog: Contributte\Monolog\DI\MonologExtension

	webpackassets: App\UI\Extension\Webpack\DI\WebpackAssetExtension
	custompresenterfactory: App\UI\Extension\PresenterFactory\DI\CustomPresenterFactoryExtension
	latteMacros: App\UI\Extension\Latte\LatteMacrosExtension

dbal:
	debug:
		panel: %debugMode%
	connection:
		host: %database.host%
		port: %database.port%
		user: %database.user%
		password: %database.password%
		dbname: %database.dbname%
		driver: 'pdo_mysql'

		types:
			uuid:
				class: Ramsey\Uuid\Doctrine\UuidType
				commented: false
			datetime_immutable:
				class: Mistrfilda\Datetime\Doctrine\DatetimeImmutableType
				commented: false
			date_immutable:
				class: Mistrfilda\Datetime\Doctrine\DateImmutableType
				commented: false

orm:
	configuration:
		customStringFunctions:
			group_concat: DoctrineExtensions\Query\Mysql\GroupConcat
			timestampdiff: DoctrineExtensions\Query\Mysql\TimestampDiff
			day: DoctrineExtensions\Query\Mysql\Day
			month: DoctrineExtensions\Query\Mysql\Month
			year: DoctrineExtensions\Query\Mysql\Year

orm.attributes:
	mapping:
		App: %appDir%

migrations:
    table: doctrine_migrations
    column: version
    directory: %appDir%/../migrations
    namespace: Migrations

monolog:
	channel:
		default:
			handlers:
				- Monolog\Handler\RotatingFileHandler(%appDir%/../log/app-log.log, 30)
				- Monolog\Handler\StreamHandler("php://stdout")
			processors:
				- Monolog\Processor\MemoryPeakUsageProcessor()
				- Monolog\Processor\WebProcessor()
				- Monolog\Processor\IntrospectionProcessor()

console:
    url: %console.url%
    catchExceptions: false

webpackassets:
	assetsDirs:
		- %wwwDir%/build/admin

latteMacros:
	svgDir: %appDir%/../assets/svg

services:
	- App\Router\RouterFactory::createRouter

	latte.latteFactory:
		setup:
			- setStrictTypes(true)
			- addFilter(datetimeFormat, [@datetimeFormatFilter, format])
			- addFilter(secondsFormat, [@secondsFormatFilter, format])
			- addFilter(nullablestring, [@nullableStringFilter, format])
			- addFilter(flashMessageColor, [@flashMessageColorFilter, format])
			- addFilter(assetPriceFormat, [@assetPriceFormatFilter, format])
			- addFilter(currency, [@currencyFilter, format])
			- addFilter(summaryPriceFormat, [@summaryPriceFilter, format])
			- addFilter(percentage, [@percentageFilter, format])
			- addFilter(ruleOfThree, [@ruleOfThreeFilter, getPercentage])
			- addFilter(currencyConvert, [@currencyConversionFilter, convert])
			- addFilter(expensePriceFormat, [@expensePriceFilter, format])
			- addFilter(nullableCurrencyConvert, [@currencyNullableConversionFilter, convert])
			- addFilter(summaryPriceConvert, [@summaryPriceConvertFilter, convert])

	#CUSTOM LATTE FILTERS
	datetimeFormatFilter: App\UI\Filter\DatetimeFormatFilter
	secondsFormatFilter: App\UI\Filter\SecondsFormatFilter
	nullableStringFilter: App\UI\Filter\NullableStringFilter
	flashMessageColorFilter: App\UI\Filter\FlashMessageColorFilter
	assetPriceFormatFilter: App\UI\Filter\AssetPriceFilter
	currencyFilter: App\UI\Filter\CurrencyFilter
	summaryPriceFilter: App\UI\Filter\SummaryPriceFilter
	percentageFilter: App\UI\Filter\PercentageFilter
	ruleOfThreeFilter: App\UI\Filter\RuleOfThreeFilter
	currencyConversionFilter: App\UI\Filter\CurrencyConversionFilter
	expensePriceFilter: App\UI\Filter\CashPriceFilter
	currencyNullableConversionFilter: App\UI\Filter\CurrencyNullableConversionFilter
	summaryPriceConvertFilter: App\UI\Filter\SummaryPriceConvertFilter

	#BASE PRESENTER PARAMETERS
	- App\UI\Base\BasePresenterParameters(pageTitle: %basePresenterParameters.pageTitle%, storageName: %basePresenterParameters.storageName%)

	#FORM
	- App\UI\Control\Form\AdminFormFactory
	- App\UI\Control\Form\AdminFormRenderer

	#DATETIME FACTORY
	- Mistrfilda\Datetime\DatetimeFactory
	- Mistrfilda\Datetime\Holiday\CzechHolidayService

	#DATAGRID
	- App\UI\Control\Datagrid\DatagridFactory

	- App\UI\Menu\MenuBuilder

	#AppAdmin
	- App\Admin\AppAdminRepository(App\Admin\AppAdmin)
	- App\Admin\AppAdminAuthenticator
	- App\Admin\AppAdminFacade
	- App\Admin\CurrentAppAdminGetter
	- App\Admin\Command\CreateAppAdminCommand
	- App\Admin\UI\AppAdminGridFactory
	- App\Admin\UI\AppAdminFormFactory
	- App\Admin\UI\AppAdminChangePasswordFormFactory

	- App\UI\Control\Modal\FrontModalControlFactory

	#Login
	- App\Login\UI\Form\LoginFormFactory

	#Dashboard
	- App\Dashboard\DashboardValueBuilderFacade
	- App\Dashboard\UI\DashboardValueControl\DashboardValueControlFactory

	#HTTP
	- App\Http\Psr7\Psr7RequestFactory
	- App\Http\Psr18\Psr18ClientFactory

	#Currency
	- App\Currency\CurrencyConversionRepository(App\Currency\CurrencyConversion)
	- App\Currency\Download\CNBCurrencyConversionDownloadFacade
	- App\Currency\Download\ECBCurrencyConversionDownloadFacade
	- App\Currency\Download\Command\CurrencyConversionDownloadCommand(typed(App\Currency\Download\CurrencyConversionDownloadFacade))
	- App\Currency\Download\CurrencyConversionDownloadInverseRateHelper
	- App\Currency\CurrencyConversionFacade

	#Asset price
	- App\Asset\Price\AssetPriceRenderer
	- App\Asset\Price\SummaryPriceService
	- App\Asset\Price\AssetPriceService
	- App\Asset\Price\AssetPriceSummaryFacade(typed(App\Asset\Price\AssetPriceFacade))

	#Stock asset
	- App\Stock\Asset\StockAssetRepository(App\Stock\Asset\StockAsset)
	- App\Stock\Asset\UI\StockAssetGridFactory
	- App\Stock\Asset\UI\StockAssetFormFactory
	- App\Stock\Asset\StockAssetFacade
	- App\Stock\Price\StockAssetPriceRecordRepository(App\Stock\Price\StockAssetPriceRecord)
	- App\Stock\Price\Downloader\TwelveData\TwelveDataDownloaderFacade(apiKey: %twelveData.apiKey%, updateStockAssetHoursThreshold: %twelveData.updateStockAssetHoursThreshold%)
	- App\Stock\Price\Downloader\TwelveData\TwelveDataDownloaderCommand
	- App\Stock\Price\Downloader\Pse\PseDataDownloaderFacade(updateStockAssetHoursThreshold: %pse.updateStockAssetHoursThreshold%, verifySsl: %pse.verifySsl%, requests: %pse.requests%)
	- App\Stock\Price\Downloader\Pse\PseDataDownloaderCommand
	- App\Stock\Asset\UI\Detail\Control\StockAssetDetailControlFactory
	- App\Stock\Asset\UI\Detail\Control\StockAssetDetailPriceChartProvider


	#Stock position
	- App\Stock\Position\StockPositionRepository(App\Stock\Position\StockPosition)
	- App\Stock\Position\UI\StockPositionGridFactory
	- App\Stock\Position\StockPositionFacade
	- App\Stock\Position\UI\StockPositionFormFactory
	- App\Stock\Asset\UI\Detail\List\StockAssetListDetailControlFactory
	- App\Stock\Asset\UI\Detail\List\StockAssetListSummaryDetailControlFactory

	#Portu asset
	- App\Portu\Asset\PortuAssetRepository(App\Portu\Asset\PortuAsset)
	- App\Portu\Asset\PortuAssetFacade
	- App\Portu\Asset\UI\PortuAssetFormFactory
	- App\Portu\Asset\UI\PortuAssetGridFactory

	#Portu position
	- App\Portu\Position\PortuPositionRepository(App\Portu\Position\PortuPosition)
	- App\Portu\Position\UI\PortuPositionGridFactory
	- App\Portu\Position\UI\PortuPositionFormFactory
	- App\Portu\Position\PortuPositionFacade
	- App\Portu\Position\UI\PortuPositionPriceGridFactory
	- App\Portu\Position\UI\PortuPositionPriceFormFactory
	- App\Portu\Price\PortuAssetPriceRecordRepository(App\Portu\Price\PortuAssetPriceRecord)

	#Portfolio statistics
	- App\Statistic\PortfolioStatisticFacade
	- App\Statistic\PortfolioStatisticRepository(App\Statistic\PortfolioStatistic)
	- App\Statistic\PortfolioStatisticRecordRepository(App\Statistic\PortfolioStatisticRecord)
	- App\Statistic\PortfolioStatisticSaveCommand
	- App\Statistic\UI\Record\PortfolioStatisticRecordGridFactory

	#Stock dividends
	- App\Stock\Dividend\StockAssetDividendFacade
	- App\Stock\Dividend\UI\StockAssetDividendFormFactory
	- App\Stock\Dividend\UI\StockAssetDividendGridFactory
	- App\Stock\Dividend\StockAssetDividendRepository(App\Stock\Dividend\StockAssetDividend)

	-
		class: App\Stock\Dividend\Downloader\WebStockAssetDividendDownloaderFacade
		arguments:
			url: %stockDividend.webStockAssetDividendDownloaderUrl%
			requestHost: %webStockPriceDownloader.requestHost%

	- App\Stock\Dividend\Downloader\StockAssetDividendDownloaderCommand(typed(App\Stock\Dividend\Downloader\StockAssetDividendDownloader))
	- App\Stock\Dividend\Record\StockAssetDividendRecordRepository(App\Stock\Dividend\Record\StockAssetDividendRecord)
	- App\Stock\Dividend\Record\StockAssetDividendRecordService
	- App\Stock\Dividend\Record\StockAssetDividendRecordFacade
	- App\Stock\Dividend\Record\StockAssetDividendRecordCommand
	- App\Stock\Dividend\Record\UI\StockAssetDividendRecordGridFactory
	- App\Stock\Dividend\UI\Detail\StockDividendDetailControlFactory
	- App\Stock\Dividend\UI\StockAssetDividendDetailService

	- App\Stock\Price\Downloader\Web\WebDataDownloaderFacade(url: %webStockPriceDownloader.url%, requestHost: %webStockPriceDownloader.requestHost%, verifySsl: %webStockPriceDownloader.verifySsl%, updateStockAssetHoursThreshold: %webStockPriceDownloader.updateStockAssetHoursThreshold%, )
	- App\Stock\Price\Downloader\Web\WebDataDownloaderCommand

	- App\Stock\Position\Closed\StockClosedPositionFacade
	- App\Stock\Position\Closed\StockClosedPositionRepository(App\Stock\Position\Closed\StockClosedPosition)
	- App\Stock\Position\Closed\StockClosedPositionFormFactory

	- App\UI\Control\Chart\ChartControlFactory
	- App\Statistic\UI\Chart\StockDividendByMonthChartDataProvider
	- App\Statistic\UI\Chart\StockDividendByYearChartDataProvider
	- App\Statistic\UI\Chart\PortfolioTotalValueChartProvider
	- App\Statistic\UI\Chart\PortfolioTotalValueLastMonthChartProvider
	- App\Statistic\UI\Chart\StockDividendByCompanyAndMonthChartDataProvider
	- App\Statistic\UI\Chart\StockDividendByCompanyChartDataProvider

	- App\Cash\Expense\Bank\BankExpenseRepository(App\Cash\Expense\Bank\BankExpense)
	- App\Cash\Expense\UI\BankExpenseUploadFormFactory
	- App\Cash\Expense\UI\BankExpenseFormFactory
	- App\Cash\Expense\UI\BankExpenseGridFactory
	- App\Cash\Expense\Bank\BankExpenseFormFacade


	- App\Cash\Bank\Kb\KbPdfCashParser
	- App\Cash\Bank\Kb\KbContentParser
	- App\Cash\Bank\Kb\KbCashFacade

	- App\Cash\Expense\Tag\ExpenseTagRepository(App\Cash\Expense\Tag\ExpenseTag)
	- App\Cash\Expense\Tag\ExpenseTagFacade
	- App\Cash\Expense\Category\ExpenseCategoryRepository(App\Cash\Expense\Category\ExpenseCategory)
	- App\Cash\Expense\Tag\UI\ExpenseTagFormFactory
	- App\Cash\Expense\Tag\UI\ExpenseTagDatagridFactory
	- App\Cash\Expense\Tag\Command\ExpenseTagProcessCommand
	- App\Cash\Expense\UI\Control\ExpanseOverviewCategoryControlFactory
	- App\Cash\Expense\UI\Control\ExpenseOverviewCategoryChartDataProvider

	#WORK MONTHLY INCOME
	-
		class: App\Cash\Income\WorkMonthlyIncome\HarvestTimeDownloader
		arguments:
			harvestAccountId: %workMonthlyIncome.harvestAccountId%
			harvestUserId: %workMonthlyIncome.harvestUserId%
			harvestAccessToken: %workMonthlyIncome.harvestAccessToken%

	- App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncomeRepository(App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncome)
	- App\Cash\Income\WorkMonthlyIncome\WorkMonthlyIncomeFacade(currentHourlyRate: %workMonthlyIncome.currentHourlyRate%)
	- App\Cash\Income\WorkMonthlyIncome\DownloadWorkMonthlyIncomeCommand

	- App\Cash\Income\Bank\BankIncomeRepository(App\Cash\Income\Bank\BankIncome)
	- App\Cash\Income\Bank\UI\BankIncomeGridFactory
